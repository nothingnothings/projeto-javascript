Esse módulo está uma confusão.




Tirei o plugin do 



'clean-webpack-plugin', pois era 

ele que estava causando problemas na execução dos servidores (estava movendo coisas, arquivos, por aí).



também tirei o 'contentBase' lá do 'webpack.config.js'....



---------------------------------------





Agora o servidor de desenvolvimento está funcionando;


ESTÁ USANDO 


ARQUIVOS lá 


do 'assets/scripts' (como queríamos, são aqueles 2 arquivos bundlados)....


MAS há um problema:


O live reloading não está ativado, eu tenho sempre que fazer as mudanças 
nos 

arquivos source (em 'src/app' e 'src/Utility') 

E ENTÃO 

FAZER O BUNDLE/COMPILAÇÃO manualmente por meio 

do comando 'webpack' no console....



Tenho que encontrar um jeito de re-ativar o live-reloading.... (se o live-reloading estiver ligado,

verei 'WDS' no console....)



























module.exports = {
  target: "web",
  // webpack-dev-server will monitor the code dependency
  // of these entry points, and re-create the bundle
  // when changes are detected. In this example, the main
  // javascript is main.js, and it points to
  // other code dependencies
  entry: {
    app: ["./app/javascripts/packs/main.js"]
  },
  // This specifies where javascript bundle is created when
  // webpack CLI is run. However, webpack-dev-server is only 
  // concerned with the 'filename' parameter.
  // webpack-dev-server generates the bundle with the 'filename' in
  // memory. It never creates an actual file in the 'path' specified
  // unlike the webpack CLI.  
  output: {
    path: path.resolve(__dirname, "../build/assets"),
    filename: "bundle.js",
  },



  
  // webpack-dev-server configuration
  devServer: {
    // Can be omitted unless you are using 'docker' 
    host: '0.0.0.0',
    // This is where webpack-dev-server serves your bundle
    // which is created in memory.
    // To use the in-memory bundle,
    // your <script> 'src' should point to the bundle
    // prefixed with the 'publicPath', e.g.:
    //   <script src='http://localhost:9001/assets/bundle.js'>
    //   </script>
    publicPath: '/assets/',
    // The local filesystem directory where static html files
    // should be placed.
    // Put your main static html page containing the <script> tag
    // here to enjoy 'live-reloading'
    // E.g., if 'contentBase' is '../views', you can
    // put 'index.html' in '../views/main/index.html', and
    // it will be available at the url:
    //   https://localhost:9001/main/index.html
    contentBase: path.resolve(__dirname, "../views"),
    // 'Live-reloading' happens when you make changes to code
    // dependency pointed to by 'entry' parameter explained earlier.
    // To make live-reloading happen even when changes are made
    // to the static html pages in 'contentBase', add 
    // 'watchContentBase'
    watchContentBase: true,
    compress: true,
    port: 9001
  },
  ... other webpack configuration ...
}



-----------------------




Consegui consertar o webpack/webpack-server,



o problema era um '/' faltante em 'webpack.config.js', em 

'publicPath'....



------------------------



Agora devemos acabar com esse módulo.